{"ast":null,"code":"const API_BASE=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// API utility functions\nexport const api={// Survey endpoints\nsurveys:{getAll:async()=>{try{const response=await fetch(\"\".concat(API_BASE,\"/surveys\"));if(!response.ok)throw new Error('Failed to fetch surveys');const result=await response.json();return result.data||[];// ✅ Return just the survey array\n}catch(error){console.error('Error fetching surveys:',error);return[];// ✅ Fail gracefully with an empty array\n}},addSurvey:async surveyData=>{try{const response=await fetch(\"\".concat(API_BASE,\"/surveys\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(surveyData)});if(!response.ok)throw new Error('Failed to create survey');return await response.json();}catch(error){console.error('Error creating survey:',error);throw error;}},getStats:async()=>{try{const response=await fetch(\"\".concat(API_BASE,\"/stats\"));if(!response.ok)throw new Error('Failed to fetch stats');return await response.json();}catch(error){console.error('Error fetching stats:',error);throw error;}}}};// Validation utilities\nexport const validation={isValidAge:age=>age>=18&&age<=100,isValidYears:years=>years>=0&&years<=50,isValidTimeClean:months=>months>=0,isValidQuitAttempts:attempts=>attempts>=1,isNotEmpty:value=>value&&value.toString().trim().length>0,isValidEmail:email=>/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)};// Data processing utilities\nexport const dataUtils={calculatePercentage:(value,total)=>{if(total===0)return 0;return Math.round(value/total*100);},formatTimeClean:months=>{if(months<12)return\"\".concat(months,\" month\").concat(months!==1?'s':'');const years=Math.floor(months/12);const remainingMonths=months%12;if(remainingMonths===0)return\"\".concat(years,\" year\").concat(years!==1?'s':'');return\"\".concat(years,\"y \").concat(remainingMonths,\"m\");},getAgeGroup:age=>{if(age<25)return'18-24';if(age<35)return'25-34';if(age<45)return'35-44';if(age<55)return'45-54';return'55+';},getRecoveryTimeGroup:months=>{if(months<6)return'0-6 months';if(months<12)return'6-12 months';if(months<24)return'1-2 years';if(months<60)return'2-5 years';return'5+ years';},// Generate synthetic data for testing\ngenerateTestData:()=>{const drugs=['Alcohol','Cocaine','Heroin','Prescription opioids','Methamphetamine'];const genders=['Male','Female','Non-binary'];const locations=['New York, NY','Los Angeles, CA','Chicago, IL','Houston, TX','Phoenix, AZ'];const motivations=['Family','Health concerns','Legal issues','Financial problems','Career'];const successFactors=['Professional therapy','Support groups (AA/NA)','Family support','Medication-assisted treatment'];return{userId:Date.now().toString(),demographics:{age:Math.floor(Math.random()*50)+18,gender:genders[Math.floor(Math.random()*genders.length)],location:locations[Math.floor(Math.random()*locations.length)]},drugHistory:{primaryDrug:drugs[Math.floor(Math.random()*drugs.length)],yearsOfUse:Math.floor(Math.random()*15)+1,ageStarted:Math.floor(Math.random()*20)+15},recoveryJourney:{timeClean:Math.floor(Math.random()*60)+1,quitAttempts:Math.floor(Math.random()*5)+1,motivations:motivations.slice(0,Math.floor(Math.random()*3)+1),successFactors:successFactors.slice(0,Math.floor(Math.random()*3)+1)},mentalHealth:{hadTherapy:Math.random()>0.5,hadMedication:Math.random()>0.6},advice:{adviceForOthers:\"Take it one day at a time and don't be afraid to ask for help. Recovery is possible.\"},anonymous:true,createdAt:new Date()};}};// Local storage utilities (for offline functionality)\nexport const storage={saveDraft:surveyData=>{localStorage.setItem('surveyDraft',JSON.stringify(surveyData));},loadDraft:()=>{const draft=localStorage.getItem('surveyDraft');return draft?JSON.parse(draft):null;},clearDraft:()=>{localStorage.removeItem('surveyDraft');},savePreferences:preferences=>{localStorage.setItem('userPreferences',JSON.stringify(preferences));},loadPreferences:()=>{const prefs=localStorage.getItem('userPreferences');return prefs?JSON.parse(prefs):{theme:'light',notifications:true,anonymousMode:true};}};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_URL","api","surveys","getAll","response","fetch","concat","ok","Error","result","json","data","error","console","addSurvey","surveyData","method","headers","body","JSON","stringify","getStats","validation","isValidAge","age","isValidYears","years","isValidTimeClean","months","isValidQuitAttempts","attempts","isNotEmpty","value","toString","trim","length","isValidEmail","email","test","dataUtils","calculatePercentage","total","Math","round","formatTimeClean","floor","remainingMonths","getAgeGroup","getRecoveryTimeGroup","generateTestData","drugs","genders","locations","motivations","successFactors","userId","Date","now","demographics","random","gender","location","drugHistory","primaryDrug","yearsOfUse","ageStarted","recoveryJourney","timeClean","quitAttempts","slice","mentalHealth","hadTherapy","hadMedication","advice","adviceForOthers","anonymous","createdAt","storage","saveDraft","localStorage","setItem","loadDraft","draft","getItem","parse","clearDraft","removeItem","savePreferences","preferences","loadPreferences","prefs","theme","notifications","anonymousMode"],"sources":["/home/kwenzo/Music/Project/survivalsrs/survival/client/src/utils/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// API utility functions\r\nexport const api = {\r\n  // Survey endpoints\r\n  surveys: {\r\n  getAll: async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/surveys`);\r\n      if (!response.ok) throw new Error('Failed to fetch surveys');\r\n      const result = await response.json();\r\n      return result.data || []; // ✅ Return just the survey array\r\n    } catch (error) {\r\n      console.error('Error fetching surveys:', error);\r\n      return []; // ✅ Fail gracefully with an empty array\r\n    }\r\n  },\r\n\r\n\r\n    addSurvey: async (surveyData) => {\r\n      try {\r\n        const response = await fetch(`${API_BASE}/surveys`, {\r\n        \r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(surveyData),\r\n        });\r\n        if (!response.ok) throw new Error('Failed to create survey');\r\n        return await response.json();\r\n      } catch (error) {\r\n        console.error('Error creating survey:', error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    getStats: async () => {\r\n      try {\r\n        const response = await fetch(`${API_BASE}/stats`);\r\n        if (!response.ok) throw new Error('Failed to fetch stats');\r\n        return await response.json();\r\n      } catch (error) {\r\n        console.error('Error fetching stats:', error);\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Validation utilities\r\nexport const validation = {\r\n  isValidAge: (age) => age >= 18 && age <= 100,\r\n  isValidYears: (years) => years >= 0 && years <= 50,\r\n  isValidTimeClean: (months) => months >= 0,\r\n  isValidQuitAttempts: (attempts) => attempts >= 1,\r\n  isNotEmpty: (value) => value && value.toString().trim().length > 0,\r\n  isValidEmail: (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\r\n};\r\n\r\n// Data processing utilities\r\nexport const dataUtils = {\r\n  calculatePercentage: (value, total) => {\r\n    if (total === 0) return 0;\r\n    return Math.round((value / total) * 100);\r\n  },\r\n\r\n  formatTimeClean: (months) => {\r\n    if (months < 12) return `${months} month${months !== 1 ? 's' : ''}`;\r\n    const years = Math.floor(months / 12);\r\n    const remainingMonths = months % 12;\r\n    if (remainingMonths === 0) return `${years} year${years !== 1 ? 's' : ''}`;\r\n    return `${years}y ${remainingMonths}m`;\r\n  },\r\n\r\n  getAgeGroup: (age) => {\r\n    if (age < 25) return '18-24';\r\n    if (age < 35) return '25-34';\r\n    if (age < 45) return '35-44';\r\n    if (age < 55) return '45-54';\r\n    return '55+';\r\n  },\r\n\r\n  getRecoveryTimeGroup: (months) => {\r\n    if (months < 6) return '0-6 months';\r\n    if (months < 12) return '6-12 months';\r\n    if (months < 24) return '1-2 years';\r\n    if (months < 60) return '2-5 years';\r\n    return '5+ years';\r\n  },\r\n\r\n  // Generate synthetic data for testing\r\n  generateTestData: () => {\r\n    const drugs = ['Alcohol', 'Cocaine', 'Heroin', 'Prescription opioids', 'Methamphetamine'];\r\n    const genders = ['Male', 'Female', 'Non-binary'];\r\n    const locations = ['New York, NY', 'Los Angeles, CA', 'Chicago, IL', 'Houston, TX', 'Phoenix, AZ'];\r\n    const motivations = ['Family', 'Health concerns', 'Legal issues', 'Financial problems', 'Career'];\r\n    const successFactors = ['Professional therapy', 'Support groups (AA/NA)', 'Family support', 'Medication-assisted treatment'];\r\n    \r\n    return {\r\n      userId: Date.now().toString(),\r\n      demographics: {\r\n        age: Math.floor(Math.random() * 50) + 18,\r\n        gender: genders[Math.floor(Math.random() * genders.length)],\r\n        location: locations[Math.floor(Math.random() * locations.length)]\r\n      },\r\n      drugHistory: {\r\n        primaryDrug: drugs[Math.floor(Math.random() * drugs.length)],\r\n        yearsOfUse: Math.floor(Math.random() * 15) + 1,\r\n        ageStarted: Math.floor(Math.random() * 20) + 15\r\n      },\r\n      recoveryJourney: {\r\n        timeClean: Math.floor(Math.random() * 60) + 1,\r\n        quitAttempts: Math.floor(Math.random() * 5) + 1,\r\n        motivations: motivations.slice(0, Math.floor(Math.random() * 3) + 1),\r\n        successFactors: successFactors.slice(0, Math.floor(Math.random() * 3) + 1)\r\n      },\r\n      mentalHealth: {\r\n        hadTherapy: Math.random() > 0.5,\r\n        hadMedication: Math.random() > 0.6\r\n      },\r\n      advice: {\r\n        adviceForOthers: \"Take it one day at a time and don't be afraid to ask for help. Recovery is possible.\"\r\n      },\r\n      anonymous: true,\r\n      createdAt: new Date()\r\n    };\r\n  }\r\n};\r\n\r\n// Local storage utilities (for offline functionality)\r\nexport const storage = {\r\n  saveDraft: (surveyData) => {\r\n    localStorage.setItem('surveyDraft', JSON.stringify(surveyData));\r\n  },\r\n  \r\n  loadDraft: () => {\r\n    const draft = localStorage.getItem('surveyDraft');\r\n    return draft ? JSON.parse(draft) : null;\r\n  },\r\n  \r\n  clearDraft: () => {\r\n    localStorage.removeItem('surveyDraft');\r\n  },\r\n  \r\n  savePreferences: (preferences) => {\r\n    localStorage.setItem('userPreferences', JSON.stringify(preferences));\r\n  },\r\n  \r\n  loadPreferences: () => {\r\n    const prefs = localStorage.getItem('userPreferences');\r\n    return prefs ? JSON.parse(prefs) : {\r\n      theme: 'light',\r\n      notifications: true,\r\n      anonymousMode: true\r\n    };\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}